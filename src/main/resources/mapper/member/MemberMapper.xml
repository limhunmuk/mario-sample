<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.radait.mariosample.web.api.member.mapper.MemberMapper">

    <resultMap id="MemberMap" type="Member">
        <id column="member_id" property="memberId"/>
        <result column="login_id" property="loginId"/>
        <result column="mem_nm" property="memNm"/>
        <result column="nick_nm" property="nickNm"/>
    </resultMap>

    <select id="findMemberAll" parameterType="MemberSearchDto" resultMap="MemberMap">
        SELECT
            member_id as member_id
             , login_id
             , mem_nm
             , nick_nm
        FROM member
        <where>
            <if test="cond.id != null">
                AND m.member_id = #{cond.id}
            </if>
            <if test="cond.loginId != null and cond.loginId != ''">
                AND m.login_id = #{cond.loginId}
            </if>
            <if test="cond.nameLike != null">
                AND m.mem_nm LIKE #{cond.nameLike}
            </if>
        </where>
        ORDER BY ${cond.safeSortColumn} ${cond.safeDirection}
        LIMIT #{cond.sizeSafe} OFFSET #{cond.offset}
    </select>

    <!-- 총 건수 (동일 조건) -->
    <select id="countMemberAll" parameterType="MemberSearchDto" resultType="long">
        SELECT COUNT(*)
        FROM member m
        <where>
            <if test="cond.id != null">
                AND m.member_id = #{cond.id}
            </if>
            <if test="cond.loginId != null and cond.loginId != ''">
                AND m.login_id = #{cond.loginId}
            </if>
            <if test="cond.nameLike != null">
                AND m.mem_nm LIKE #{cond.nameLike}
            </if>
        </where>
    </select>

    <select id="findMemberById"  resultMap="MemberMap">
        SELECT
            member_id as member_id
             , login_id
             , mem_nm
             , nick_nm
        FROM member
        WHERE member_id = #{id}

    </select>

    <insert id="insertMember"
            parameterType="Member"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO member(login_id, mem_nm, nick_nm)
        VALUES (#{loginId}, #{name}, #{nickName})
    </insert>

</mapper>